/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package guipkg;

import java.util.HashMap;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.Map;

/**
 *
 * @author mateus
 */
public class CadastroDietaPanel extends javax.swing.JFrame {

    /**
     * Creates new form CadastroDietaPanel
     */
    public CadastroDietaPanel(Sessao _sessao) {
        initComponents();
        dietas_map = new HashMap<String, Integer>();
        refeicoes_map = new HashMap<String, Integer>();
        sessao = _sessao;
    }

    HashMap<String, Integer> dietas_map;
    HashMap<String, Integer> refeicoes_map;
    Sessao sessao;
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jButton6 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox<>();
        jButton8 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jComboBox3 = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel1.setText("Dietas");

        jComboBox1.setEditable(true);
        jComboBox1.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jButton6.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jButton6.setText("Add");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel3.setText("Refeições da dieta");

        jComboBox2.setEditable(true);
        jComboBox2.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });

        jButton8.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jButton8.setText("Add");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel4.setText("Alimentos da refeição da dieta");

        jComboBox3.setEditable(true);
        jComboBox3.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N

        jButton1.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jButton1.setText("Add");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jButton2.setText("Fechar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton1)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jComboBox3, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel4)
                                .addComponent(jButton8)
                                .addComponent(jComboBox2, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel3)
                                .addComponent(jButton6)
                                .addComponent(jComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel1))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(126, 126, 126)
                        .addComponent(jButton2)))
                .addContainerGap(25, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton6)
                .addGap(51, 51, 51)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton8)
                .addGap(44, 44, 44)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addGap(69, 69, 69)
                .addComponent(jButton2)
                .addContainerGap(17, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private String ref_from_pk(String refpk){
        Iterator it = refeicoes_map.entrySet().iterator();
        while (it.hasNext()) {
            Map.Entry pair = (Map.Entry)it.next();
            if ( ((Integer)pair.getValue()) == Integer.parseInt(refpk) ){
                return (String) pair.getKey();
            }
        }
        return null;
    }
    
    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed

        // atualizar combobox com alimentos da refeicao
        // quando esta combobox mudar de selecao
        if (evt.getActionCommand() != "comboBoxChanged"){
            return;
        }

        if (jComboBox1.getSelectedItem() == null){
            return;
        }

        String dieta_label = jComboBox1.getSelectedItem().toString();
        if (!dietas_map.containsKey(dieta_label)){
            return;
        }

        ArrayList<String> ref_pks = new ArrayList<String>();
        ref_pks = sessao.dbintf.read_refeicoes_dieta(dietas_map.get(dieta_label));
        if (ref_pks == null){
            return;
        }

        jComboBox2.removeAllItems();
        jComboBox3.removeAllItems();
        for (String rpk: ref_pks){
            String s = ref_from_pk(rpk);
            if (s == null) {
                continue;
            }
            jComboBox2.addItem(s);
        }
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        if (jComboBox1.getSelectedItem() == null){
            return;
        }
        String dieta_label = jComboBox1.getSelectedItem().toString();
        if (dietas_map.containsKey(dieta_label)){
            return; // ja tem este label
        }
        ArrayList<Integer> refs_dummy = new ArrayList<Integer>();
        int pk = sessao.dbintf.adicionar_dieta(sessao.username, refs_dummy);
        if (pk == -1){
            return;
        }
        dietas_map.put(dieta_label, pk);
        jComboBox1.addItem(dieta_label);
        jComboBox2.removeAllItems();
        jComboBox3.removeAllItems();
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed

        // atualizar combobox com alimentos da refeicao
        // quando esta combobox mudar de selecao
        if (evt.getActionCommand() != "comboBoxChanged"){
            return;
        }

        if (jComboBox1.getSelectedItem() == null){
            return;
        }

        String dieta_label = jComboBox1.getSelectedItem().toString();
        if (!dietas_map.containsKey(dieta_label)){
            return;
        }

        if (jComboBox2.getSelectedItem() == null){
            return;
        }

        String ref_label = jComboBox2.getSelectedItem().toString();
        if (!refeicoes_map.containsKey(ref_label)){
            return;
        }

        ArrayList<String> alims = new ArrayList<String>();
        alims = sessao.dbintf.read_alimentos_refeicao(dietas_map.get(dieta_label), refeicoes_map.get(ref_label));
        if (alims == null){
            return;
        }

        jComboBox3.removeAllItems();
        for (String a: alims){
            jComboBox3.addItem(a);
        }
    }//GEN-LAST:event_jComboBox2ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed

        if (jComboBox1.getSelectedItem() == null){
            return;
        }
        String dieta_label = jComboBox1.getSelectedItem().toString();

        if (jComboBox2.getSelectedItem() == null){
            return;
        }
        String ref_label = jComboBox2.getSelectedItem().toString();

        if (refeicoes_map.containsKey(ref_label)){
            return; // ja tem este label
        }

        ArrayList<String> alims_dummy = new ArrayList<String>();
        int pk = sessao.dbintf.adicionar_refeicao(alims_dummy);
        if (pk == -1){
            return;
        }

        refeicoes_map.put(ref_label, pk);
        ArrayList<Integer> pks_ref = new ArrayList<Integer>();
        pks_ref.add(pk);
        sessao.dbintf.update_dieta(dietas_map.get(dieta_label), sessao.username, pks_ref);
        jComboBox2.addItem(ref_label);
        jComboBox3.removeAllItems();
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        if (jComboBox2.getSelectedItem() == null){
            return;
        }
        String ref_label = jComboBox2.getSelectedItem().toString();

        if (jComboBox3.getSelectedItem() == null){
            return;
        }
        String alim_label = jComboBox3.getSelectedItem().toString();

        if (!refeicoes_map.containsKey(ref_label)){
            return; // nao tem este label
        }

        // ver se ja tem
        int pk = sessao.dbintf.get_alimento(alim_label);

        if (pk == -1){
            // nao tem, adiciona
            pk = sessao.dbintf.adicionar_alimento(alim_label);
            if (pk == -1){
                // falhou adicionar. socorro...
                System.out.println("Falhou adicionar alimento. Irrecuperavel.");
                return;
            }
        }

        ArrayList<Integer> pks_alim = new ArrayList<Integer>();
        pks_alim.add(pk);

        sessao.dbintf.update_refeicao(refeicoes_map.get(ref_label), pks_alim);

        jComboBox3.addItem(alim_label);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        this.setVisible(false);
    }//GEN-LAST:event_jButton2ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton8;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JComboBox<String> jComboBox3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    // End of variables declaration//GEN-END:variables
}
